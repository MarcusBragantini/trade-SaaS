const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configura√ß√£o do ForexAI Trading System...\n');

// Check if .env file exists
const envPath = path.join(__dirname, '.env');
if (!fs.existsSync(envPath)) {
  console.log('‚ùå Arquivo .env n√£o encontrado.');
  console.log('üìã Criando arquivo .env a partir de .env.example...');
  
  const envExamplePath = path.join(__dirname, '.env.example');
  if (fs.existsSync(envExamplePath)) {
    fs.copyFileSync(envExamplePath, envPath);
    console.log('‚úÖ Arquivo .env criado. Por favor, configure as vari√°veis de ambiente.');
  } else {
    console.log('‚ùå Arquivo .env.example n√£o encontrado.');
    process.exit(1);
  }
} else {
  console.log('‚úÖ Arquivo .env encontrado.');
}

// Check node version
const nodeVersion = process.version;
const requiredVersion = '16.0.0';
if (parseFloat(nodeVersion.slice(1)) < parseFloat(requiredVersion)) {
  console.log(`‚ùå Vers√£o do Node.js (${nodeVersion}) √© inferior √† requerida (${requiredVersion}+)`);
  process.exit(1);
} else {
  console.log(`‚úÖ Vers√£o do Node.js: ${nodeVersion}`);
}

// Check if dependencies are installed
try {
  const packageJson = require('./package.json');
  console.log('‚úÖ package.json carregado.');
} catch (error) {
  console.log('‚ùå Erro ao carregar package.json:', error.message);
  process.exit(1);
}

// Check if MySQL is available
console.log('\nüìä Verificando configura√ß√£o MySQL...');
try {
  const mysql = require('mysql2/promise');
  console.log('‚úÖ MySQL2 package dispon√≠vel.');
} catch (error) {
  console.log('‚ùå MySQL2 package n√£o dispon√≠vel. Execute: npm install mysql2');
  process.exit(1);
}

console.log('\n‚úÖ Verifica√ß√£o de configura√ß√£o conclu√≠da.');
console.log('\nüìù Pr√≥ximos passos:');
console.log('1. Configure as vari√°veis no arquivo .env (especialmente MySQL)');
console.log('2. Execute "npm install" para instalar as depend√™ncias');
console.log('3. Execute "npm run init-db" para inicializar o banco de dados');
console.log('4. Execute "npm run dev" para iniciar o servidor\n');